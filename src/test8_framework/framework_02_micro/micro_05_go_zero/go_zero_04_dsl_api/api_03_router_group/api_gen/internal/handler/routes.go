// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	class "go-dev/src/test8_framework/framework_02_micro/micro_05_go_zero/go_zero_04_dsl_api/api_03_router_group/api_gen/internal/handler/class"
	role "go-dev/src/test8_framework/framework_02_micro/micro_05_go_zero/go_zero_04_dsl_api/api_03_router_group/api_gen/internal/handler/role"
	user "go-dev/src/test8_framework/framework_02_micro/micro_05_go_zero/go_zero_04_dsl_api/api_03_router_group/api_gen/internal/handler/user"
	"go-dev/src/test8_framework/framework_02_micro/micro_05_go_zero/go_zero_04_dsl_api/api_03_router_group/api_gen/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/class/add",
				Handler: class.UserClassAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/class/delete",
				Handler: class.UserClassDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/class/info",
				Handler: class.UserClassInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/class/list",
				Handler: class.UserClassListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/class/update",
				Handler: class.UserClassUpdateHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/role/add",
				Handler: role.UserRoleAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/role/delete",
				Handler: role.UserRoleDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/role/info",
				Handler: role.UserRoleInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/role/list",
				Handler: role.UserRoleListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/role/update",
				Handler: role.UserRoleUpdateHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/anonymous_user/info",
				Handler: user.UserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/anonymous_user/info/update",
				Handler: user.UserInfoUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/anonymous_user/list",
				Handler: user.UserListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/anonymous_user/login",
				Handler: user.UserLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)
}
