// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package types

type Base struct {
	BaseName string
}

type StructureExample struct {
	BaseInt               int                          `json:"base_int"`
	BaseBool              bool                         `json:"base_bool"`
	BaseString            string                       `json:"base_string"`
	BaseByte              byte                         `json:"base_byte"`
	BaseFloat32           float32                      `json:"base_float32"`
	BaseFloat64           float64                      `json:"base_float64"`
	BaseIntSlice          []int                        `json:"base_int_slice"`
	BaseBoolSlice         []bool                       `json:"base_bool_slice"`
	BaseStringSlice       []string                     `json:"base_string_slice"`
	BaseByteSlice         []byte                       `json:"base_byte_slice"`
	BaseFloat32Slice      []float32                    `json:"base_float32_slice"`
	BaseFloat64Slice      []float64                    `json:"base_float64_slice"`
	BaseMapIntString      map[int]string               `json:"base_map_int_string"`
	BaseMapStringInt      map[string]int               `json:"base_map_string_int"`
	BaseMapStringStruct   map[string]*StructureExample `json:"base_map_string_struct"`
	BaseMapStringIntArray map[string][]int             `json:"base_map_string_int_array"`
	// 匿名示例
	*Base
	Base4     *Base `json:"base4"`
	TagOmit   string
	TagaOmit2 interface{}
	Object    map[string]interface{} `json:"-"`
}
