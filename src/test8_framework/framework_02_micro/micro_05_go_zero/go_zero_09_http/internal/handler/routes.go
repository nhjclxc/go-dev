// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"
	"time"

	"github.com/zeromicro/go-zero/rest"
	"go_zero_09_http/internal/svc"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// http://127.0.0.1:8899/order/info?orderId=666
				// 获取订单信息
				Method:  http.MethodGet,
				Path:    "/order/info",
				Handler: OrderInfoHandler(serverCtx),
			},
			{
				// 新增订单
				Method:  http.MethodPost,
				Path:    "/order/info",
				Handler: InsertOrderInfoHandler(serverCtx),
			},
			{
				// 修改订单
				Method:  http.MethodPut,
				Path:    "/order/info",
				Handler: UpdateOrderInfoHandler(serverCtx),
			},
			{
				// 删除订单
				Method:  http.MethodDelete,
				Path:    "/order/info/:orderId",
				Handler: DeleteOrderInfoHandler(serverCtx),
			},
			//{
			//	// http://127.0.0.1:8899/order/info/pageList?pageNum=1&pageSize=11&goodsName=
			//	// 获取订单分页信息
			//	Method:  http.MethodGet,
			//	Path:    "/order/info/pageList",
			//	Handler: getOrderInfoPageListHandler(serverCtx),
			//},
		},
	)

	// 以下是自定义中间件的演示
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{
				serverCtx.CustomMiddleware.Handle,
			},
			[]rest.Route{
				{
					// http://127.0.0.1:8899/order/info/pageList?pageNum=1&pageSize=11&goodsName=
					// 获取订单分页信息
					Method:  http.MethodGet,
					Path:    "/order/info/pageList",
					Handler: getOrderInfoPageListHandler(serverCtx),
				},
			}..., // 使用 ... 将数组展开
		),
		rest.WithTimeout(3000*time.Millisecond),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// http://127.0.0.1:8899/sendSSE
				// 获取订单信息
				Method:  http.MethodGet,
				Path:    "/sendSSE",
				Handler: sendSSEHandler(serverCtx),
			},
		},
		rest.WithTimeout(3000*time.Second),
	)
}
