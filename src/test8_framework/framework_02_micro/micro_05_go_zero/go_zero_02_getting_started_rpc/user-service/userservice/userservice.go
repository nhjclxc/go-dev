// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: anonymous_user.proto

package userservice

import (
	"context"

	"user-service/proto/rpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserReq  = user.UserReq
	UserResp = user.UserResp

	UserService interface {
		GetUserByName(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) GetUserByName(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.GetUserByName(ctx, in, opts...)
}
