// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: user.proto

package grpcuserservice

import (
	"context"

	"grpc_order/grpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GrpcGetUserReq  = user.GrpcGetUserReq
	GrpcGetUserResp = user.GrpcGetUserResp

	GrpcUserService interface {
		GrpcGetUser(ctx context.Context, in *GrpcGetUserReq, opts ...grpc.CallOption) (*GrpcGetUserResp, error)
	}

	defaultGrpcUserService struct {
		cli zrpc.Client
	}
)

func NewGrpcUserService(cli zrpc.Client) GrpcUserService {
	return &defaultGrpcUserService{
		cli: cli,
	}
}

func (m *defaultGrpcUserService) GrpcGetUser(ctx context.Context, in *GrpcGetUserReq, opts ...grpc.CallOption) (*GrpcGetUserResp, error) {
	client := user.NewGrpcUserServiceClient(m.cli.Conn())
	return client.GrpcGetUser(ctx, in, opts...)
}
