// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: order.proto

package grpcorderservice

import (
	"context"

	"grpc_coupon/grpc/order"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GrpcGetOrderReq  = order.GrpcGetOrderReq
	GrpcGetOrderResp = order.GrpcGetOrderResp

	GrpcOrderService interface {
		GrpcGetOrder(ctx context.Context, in *GrpcGetOrderReq, opts ...grpc.CallOption) (*GrpcGetOrderResp, error)
	}

	defaultGrpcOrderService struct {
		cli zrpc.Client
	}
)

func NewGrpcOrderService(cli zrpc.Client) GrpcOrderService {
	return &defaultGrpcOrderService{
		cli: cli,
	}
}

func (m *defaultGrpcOrderService) GrpcGetOrder(ctx context.Context, in *GrpcGetOrderReq, opts ...grpc.CallOption) (*GrpcGetOrderResp, error) {
	client := order.NewGrpcOrderServiceClient(m.cli.Conn())
	return client.GrpcGetOrder(ctx, in, opts...)
}
